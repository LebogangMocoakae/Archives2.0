@model Microsoft.Azure.Management.Compute.Fluent.IVirtualMachine

@{
    ViewData["Title"] = "Edit VM";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit VM - Kamva Cloud Technologies</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f0f8ff;
            color: #333;
            font-family: 'Arial', sans-serif;
        }

        .sub-navbar {
            background: #0066cc;
            padding: 0.5rem 0;
        }

            .sub-navbar ul {
                list-style-type: none;
                padding: 0;
                margin: 0;
                display: flex;
                justify-content: center;
            }

            .sub-navbar li {
                margin: 0 1rem;
            }

            .sub-navbar a {
                color: #fff;
                text-decoration: none;
                font-size: 1.1rem;
            }

                .sub-navbar a:hover {
                    text-decoration: underline;
                }

        h1 {
            text-align: center;
            margin-top: 2rem;
        }

        .table {
            margin: 2rem auto;
            width: 90%;
        }

        .form-group {
            margin: 1rem 0;
        }

        .btn {
            margin: 0.5rem 0.5rem 0.5rem 0;
        }
    </style>
</head>
<body>
    <div class="sub-navbar">
        <ul>
            <li><a class="nav-link" asp-area="" asp-controller="Home" asp-action="VMAdmin">Virtual Machines</a></li>
            <li><a class="nav-link" asp-area="" asp-controller="Home" asp-action="VMCreate">Create VM</a></li>
            <li><a class="nav-link" asp-area="" asp-controller="Home" asp-action="Storage">Storage</a></li>
        </ul>
    </div>

    <h1>Configurations</h1>

    @if (Model != null)
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Name</th>
                    <th>Region</th>
                    <th>Size</th>
                    <th>Status</th>
                    <th>OS</th>
                    <th>Public IP</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.Name</td>
                    <td>@Model.RegionName</td>
                    <td>@Model.Size</td>
                    <td>@Model.PowerState.Value</td>
                    <td>@Model.OSType</td>
                    <td>@Model.GetPrimaryPublicIPAddress().IPAddress</td>
                </tr>
            </tbody>
        </table>

        <form method="post" asp-action="VMEdit">
            <input type="hidden" name="Id" value="@Model.Id" />
            <!-- Add fields for editing the VM properties -->
            <div class="form-group">
                <label for="adminUsername">Computer Admin</label>
                <input type="text" class="form-control" id="adminUsername" name="AdminUsername" value="@Model.OSProfile.AdminUsername" />

                <label for="uptime">Update Configurations</label>
                <input type="text" class="form-control" id="uptime" name="Uptime"
                       value="@((Model.OSType.ToString() == "Linux") ? "null" : Model.OSProfile.WindowsConfiguration.PatchSettings.PatchMode)" />

                <label for="diskSize">Disk Size (GB)</label>
                <input type="text" class="form-control" id="diskSize" name="DiskSize" value="@Model.OSDiskSize GB" />

                <label for="privateIP">Private IP Address</label>
                <input type="text" class="form-control" id="privateIP" name="PrivateIP" value="@Model.GetPrimaryNetworkInterface().PrimaryPrivateIP" />

                <label for="networkName">Private Network Name</label>
                <input type="text" class="form-control" id="networkName" name="NetworkName" value="@Model.GetPrimaryNetworkInterface().PrimaryIPConfiguration.GetNetwork().Name" />

                <label for="machineStatus">Machine Status</label>
                <input type="text" class="form-control" id="machineStatus" name="MachineStatus" value="@Model.ProvisioningState" />
            </div>
            <!-- Add more fields as needed -->

            <button type="submit" class="btn btn-primary" name="action" value="Restart">Restart VM</button>
            <button type="submit" class="btn btn-success" name="action" value="Power On">Power On VM</button>
            <button type="submit" class="btn btn-danger" name="action" value="Power Off">Power Off VM</button>
        </form>
    }
    else
    {
        <p class="text-center">No VM found.</p>
    }
</body>
</html>